#!/bin/python
import sys

# Dictionary to map each Deseret character to its ASCII art representation
deseret_art = {
    '𐐀': [
        "┌───╖",
        "    ║",
        "┌───╢",
        "│   ║",
        "└───╜"
    ],
    '𐐁': [
        "╓───┐",
        "║    ",
        "╟─── ",
        "║    ",
        "╙───┘"
    ],
    '𐐂': [
        "╓───┐",
        "║   │",
        "╟── │",
        "║   │",
        "╙───┘"
    ],
    '𐐃': [
        "╓┬──╖",
        "║└──╢",
        "║   ║",
        "║   ║",
        "╙───╜"
    ],
    '𐐄': [
        "╓───╖",
        "║   ║",
        "║   ║",
        "║   ║",
        "╙───╜"
    ],
    '𐐅': [
        "╓─┬─╖",
        "║ │ ║",
        "║ │ ║",
        "║ │ ║",
        "╙─┴─╜"
    ],
    '𐐆': [
        "┌─┬─┐",
        "  │  ",
        " ╘╪╕ ",
        "  │  ",
        "└─┴─┘"
    ],
    '𐐇': [
        "    │",
        "    │",
        "    │",
        "    │",
        "╒═══╡"
    ],
    '𐐈': [
        "    │",
        "    │",
        "    │",
        "    │",
        "╘═══╡"
    ],
    '𐐉': [
        "    │",
        "    │",
        "    │",
        "    │",
        "╘═╪═╡"
    ],
    '𐐊': [
        "╞═══╛",
        "│    ",
        "│    ",
        "│    ",
        "┴    "
    ],
    '𐐋': [
        "╓───┐",
        "║   │",
        "╙───┤",
        "    │",
        "    │"
    ],
    '𐐌': [
        "  ╥  ",
        "  ║  ",
        "╓─╫─┐",
        "║ ║ │",
        "╙─╜ ┘"
    ],
    '𐐍': [
        "╓┬──┐",
        "║└──┤",
        "╟── │",
        "║   │",
        "╙───┘"
    ],
    '𐐎': [
        "╥ ┬ ┬",
        "║ │ │",
        "║ │ │",
        "║ │ │",
        "╙─┴─┘"
    ],
    '𐐏': [
        "   ╥ ",
        "┌┐ ║┌",
        "└┼─╫┘",
        " │ ║ ",
        " └─╜ "
    ],
    '𐐐': [
        "┌ ╓─╖",
        "│ ║ ║",
        "└─╫─╜",
        "  ║  ",
        "  ╨  "
    ],
    '𐐑': [
        "╒═══╗",
        "    ║",
        "    ║",
        "    ║",
        "    ╨"
    ],
    '𐐒': [
        "╓───╥",
        "║   ║",
        "╟── ║",
        "║   ║",
        "╙───╨"
    ],
    '𐐓': [
        "┌───╖",
        "└   ║",
        "    ║",
        "    ║",
        "    ╨"
    ],
    '𐐔': [
        "╓┬──╥",
        "║│  ║",
        "║└──╢",
        "║   ║",
        "╙───╨"
    ],
    '𐐕': [
        "╓───╖",
        "║   ╜",
        "║    ",
        "║    ",
        "╙───┘"
    ],
    '𐐖': [
        "╓───╖",
        "║   ╜",
        "╙─╖  ",
        "  ║  ",
        "  ╨  "
    ],
    '𐐗': [
        "╓───╖",
        "║   ║",
        "║   ║",
        "║ │ ║",
        "╙─┴─╜"
    ],
    '𐐘': [
        "╓┬──╖",
        "║└──╢",
        "║   ║",
        "║ │ ║",
        "╙─┴─╜"
    ],
    '𐐙': [
        "╓───┐",
        "║   │",
        "╟───┘",
        "║    ",
        "╨    "
    ],
    '𐐚': [
        "╓───┐",
        "║   │",
        "║ ──┤",
        "║   │",
        "╙───┘"
    ],
    '𐐛': [
        "╥    ",
        "║    ",
        "║    ",
        "║    ",
        "╚═══╛"
    ],
    '𐐜': [
        "╖   ╓",
        "║   ║",
        "║   ║",
        "╙┬─┬╜",
        " └─┘ "
    ],
    '𐐝': [
        " ╓─┐ ",
        "└╫─┘ ",
        " ╙─╖ ",
        " ┌─╫┐",
        " └─╜ "
    ],
    '𐐞': [
        "╓───┐",
        "║    ",
        "╟───┐",
        "║   │",
        "╙───┘"
    ],
    '𐐟': [
        "╥───╖",
        "║   ║",
        "║   ║",
        "║   ║",
        "╨───╜"
    ],
    '𐐠': [
        "╓───┐",
        "║    ",
        "╙───╖",
        "    ║",
        "└───╜"
    ],
    '𐐡': [
        "  ╥  ",
        "╓─╢ ┐",
        "║ ║ │",
        "╙─╫─┘",
        "  ╨  "
    ],
    '𐐢': [
        "╥    ",
        "║    ",
        "║    ",
        "║   ┐",
        "╙───┘"
    ],
    '𐐣': [
        "╓───╖",
        "╙   ║",
        "    ║",
        "    ║",
        "└───╜"
    ],
    '𐐤': [
        "╥    ",
        "║    ",
        "╙───╖",
        "    ║",
        "    ╨"
    ],
    '𐐥': [
        "╖ ┌─╖",
        "║ │ ║",
        "║ │ ║",
        "║ │ ║",
        "╙─┘ ╨"
    ],
    ' ': [
        "     ",
        "     ",
        "     ",
        "     ",
        "     "
    ]
}

# Dictionary for smaller representations of Deseret characters
deseret_small = {
    '𐐀': [
        "┌─╖",
        "┌─╢",
        "└─╜"
    ],
    '𐐁': [
        "╓─┐",
        "╟─ ",
        "╙─┘"
    ],
    '𐐂': [
        "╓─┐",
        "╟─│",
        "╙─┘"
    ],
    '𐐃': [
        "╓┬╖",
        "║└╢",
        "╙─╜"
    ],
    '𐐄': [
        "╓─╖",
        "║ ║",
        "╙─╜"
    ],
    '𐐅': [
        "╓┬╖",
        "║│║",
        "╙┴╜"
    ],
    '𐐆': [
        " ┬ ",
        "╘╪╕",
        " ┴ "
    ],
    '𐐇': [
        "  │",
        "  │",
        "╒═╡"
    ],
    '𐐈': [
        "  │",
        "  │",
        "╘═╡"
    ],
    '𐐉': [
        "  │",
        "  │",
        "╘╪╡"
    ],
    '𐐊': [
        "╞═╛",
        "│  ",
        "┴  "
    ],
    '𐐋': [
        "╓─┐",
        "╙─┤",
        "  │"
    ],
    '𐐌': [
        " ╥ ",
        "╓╫┐",
        "╙╜┘"
    ],
    '𐐍': [
        "╔═╕",
        "╟─│",
        "╙─┘"
    ],
    '𐐎': [
        "╥ ┬",
        "║││",
        "╙┴┘"
    ],
    '𐐏': [
        "┌┐║",
        "└┼╫",
        " └╜"
    ],
    '𐐐': [
        "┌╓╖",
        "└╫╜",
        " ╨ "
    ],
    '𐐑': [
        "╒═╗",
        "  ║",
        "  ╨"
    ],
    '𐐒': [
        "╓─╥",
        "╟─║",
        "╙─╨"
    ],
    '𐐓': [
        "┌─╖",
        "└ ║",
        "  ╨"
    ],
    '𐐔': [
        "╓┬╥",
        "║└╢",
        "╙─╨"
    ],
    '𐐕': [
        "╓─┐",
        "║  ",
        "╙─┘"
    ],
    '𐐖': [
        "╓─╖",
        "╙╖ ",
        " ╨ "
    ],
    '𐐗': [
        "╓─╖",
        "║│║",
        "╙┴╜"
    ],
    '𐐘': [
        "╓┬╖",
        "║└╢",
        "╙┴╜"
    ],
    '𐐙': [
        "╓─┐",
        "╟─┘",
        "╨  "
    ],
    '𐐚': [
        "╓─┐",
        "║─┤",
        "╙─┘"
    ],
    '𐐛': [
        "╥  ",
        "║  ",
        "╚═╛"
    ],
    '𐐜': [
        "╖ ╓",
        "╙╥╜",
        " ╨ "
    ],
    '𐐝': [
        "╓─╖",
        "╟─╢",
        "╙─╜"
    ],
    '𐐞': [
        "╓─┐",
        "╟─┐",
        "╙─┘"
    ],
    '𐐟': [
        "╥─╖",
        "║ ║",
        "╨─╜"
    ],
    '𐐠': [
        "╓─┐",
        "╙─╖",
        "└─╜"
    ],
    '𐐡': [
        "╓╢┐",
        "╙╫┘",
        " ╨ "
    ],
    '𐐢': [
        "╥  ",
        "║ ┐",
        "╙─┘"
    ],
    '𐐣': [
        "┌─╖",
        "  ║",
        "└─╜"
    ],
    '𐐤': [
        "╥  ",
        "╙─╖",
        "  ╨"
    ],
    '𐐥': [
        "╖┌╖",
        "║│║",
        "╙┘╨"
    ],
    ' ': [
        "   ",
        "   ",
        "   "
    ]
}

def draw_deseret(width, text):
    assert width in (3, 5)
    # Split the input string into individual Deseret characters
    chars = list(text)

    # Validate all characters are in the dictionary
    for char in chars:
        if char not in deseret_art:
            raise ValueError(f"Character {char} not found in Deseret art dictionary")

    # Prepare to store lines of output
    output = [''] * width
    
    # Iterate through each line of each character's art
    for i in range(width):
        for char in chars:
            output[i] += (deseret_art[char][i] if width == 5 else deseret_small[char][i]) + " "
    
    # Print each line of the combined art
    for line in output:
        print(line)

# Example usage
if __name__ == "__main__":
    if len(sys.argv) == 3:
        width = int(sys.argv[1])
        draw_deseret(width, sys.argv[2].upper())
    elif len(sys.argv) == 2:
        draw_deseret(5, sys.argv[1].upper())
    else:
        print("Usage: python write.py '𐐀𐐁𐐂' or python write.py 5 '𐐀𐐁𐐂'")
